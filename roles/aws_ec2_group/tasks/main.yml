---        
        
- name: Provisioning EC2 instances
  block:
          - name: Upload public key to AWS
            ec2_key:
              name: "{{ key_name }}"
              key_material: "{{ lookup('file', './{{ key_name }}.pub') }}"
              region: "{{ region }}"
              aws_access_key: "{{aws_access_key_id}}"
              aws_secret_key: "{{aws_secret_access_key}}"
    
          - name: Create security group
            ec2_group:
              name: "{{ sec_group }}"
              description: "Sec group for {{ environment_name }}"
              # vpc_id: 12345
              region: "{{ region }}"
              aws_access_key: "{{aws_access_key_id}}"
              aws_secret_key: "{{aws_secret_access_key}}"
              rules:
                - proto: tcp
                  ports:
                    - 22
                  cidr_ip: 0.0.0.0/0
                  rule_desc: allow all on ssh port
            register: result_sec_group
    
          - name: Provision instance(s)
            ec2:
              aws_access_key: "{{aws_access_key_id}}"
              aws_secret_key: "{{aws_secret_access_key}}"
              key_name: "{{ key_name }}"
              instance_tags:
                Name: "{{ environment_name }}-ec2-instance"
              count_tag:
                Name: "{{ environment_name }}-ec2-instance"
              group_id: "{{ result_sec_group.group_id }}"
              image: "{{ image }}"
              instance_type: t2.micro
              region: "{{ region }}"
              wait: true
              exact_count: "{{ instance_count }}"
 
          - name: Get instances information
            ec2_instance_info:
              aws_access_key: "{{aws_access_key_id}}"
              aws_secret_key: "{{aws_secret_access_key}}"
              region: "{{ region }}"
              filters:
                "tag:Name": "{{ environment_name }}-ec2-instance"
                instance-state-name: [ "running" ]
            register: ec2_info

          - name: Set the new host inventory 
            add_host: 
                hostname: "{{ item.public_dns_name }}"
                groups: "aws_ec2"
                ansible_ssh_host: "{{ item.public_ip_address }}"
                ansible_ssh_private_key_file: "{{ key_name }}"
                ansible_ssh_user: "centos"
                instance_id: "{{ item.instance_id }}"
                private_ip_address: "{{ item.private_ip_address }}"
            with_items: "{{ ec2_info.instances }}"

          - name: Wait for SSH to come up
            delegate_to: "{{ item.public_dns_name }}"
            wait_for_connection:
              #delay: 60
              timeout: 320
            loop: "{{ ec2_info.instances }}"